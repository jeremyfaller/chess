//go:build ignore
// +build ignore

package main

import (
	"bytes"
	"fmt"
	"go/format"
	"io"
	"log"
	"math/rand"
	"os"
)

var header = `package main
// Code generated by go generate. DO NOT EDIT.

type Hash uint64

const (
	zBlack = iota + 12*64
	zWOO
	zWOOO
	zBOO
	zBOOO
	zEP
)

`

func gen(w io.Writer) {
	c := 12*64 + 1 + 4 + 8
	r := rand.New(rand.NewSource(99))
	fmt.Fprintf(w, "var zLookups = [%d]Hash{\n", c)
	for i := 0; i < c; i++ {
		fmt.Fprintf(w, "\t0x%x,\n", r.Uint64())
	}
	fmt.Fprintf(w, "}\n")
}

func main() {
	b := bytes.NewBuffer([]byte(header))
	gen(b)

	out, err := format.Source(b.Bytes())
	if err != nil {
		log.Fatal(err)
	}

	err = os.WriteFile("zobrist_tables.go", out, 0666)
	if err != nil {
		log.Fatal(err)
	}

}
